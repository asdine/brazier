// Code generated by protoc-gen-go.
// source: types.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Empty Response
type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// The request message containing the name of the bucket.
type NewBucket struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *NewBucket) Reset()                    { *m = NewBucket{} }
func (m *NewBucket) String() string            { return proto1.CompactTextString(m) }
func (*NewBucket) ProtoMessage()               {}
func (*NewBucket) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// Item sent to be saved in the bucket
type NewItem struct {
	Bucket string `protobuf:"bytes,1,opt,name=bucket" json:"bucket,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *NewItem) Reset()                    { *m = NewItem{} }
func (m *NewItem) String() string            { return proto1.CompactTextString(m) }
func (*NewItem) ProtoMessage()               {}
func (*NewItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// Select a bucket
type BucketSelector struct {
	Bucket string `protobuf:"bytes,1,opt,name=bucket" json:"bucket,omitempty"`
}

func (m *BucketSelector) Reset()                    { *m = BucketSelector{} }
func (m *BucketSelector) String() string            { return proto1.CompactTextString(m) }
func (*BucketSelector) ProtoMessage()               {}
func (*BucketSelector) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// Select a key
type KeySelector struct {
	Bucket string `protobuf:"bytes,1,opt,name=bucket" json:"bucket,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (m *KeySelector) Reset()                    { *m = KeySelector{} }
func (m *KeySelector) String() string            { return proto1.CompactTextString(m) }
func (*KeySelector) ProtoMessage()               {}
func (*KeySelector) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

// Item informations
type Item struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto1.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// List of items
type Items struct {
	Items []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *Items) Reset()                    { *m = Items{} }
func (m *Items) String() string            { return proto1.CompactTextString(m) }
func (*Items) ProtoMessage()               {}
func (*Items) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Items) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
	proto1.RegisterType((*NewBucket)(nil), "proto.NewBucket")
	proto1.RegisterType((*NewItem)(nil), "proto.NewItem")
	proto1.RegisterType((*BucketSelector)(nil), "proto.BucketSelector")
	proto1.RegisterType((*KeySelector)(nil), "proto.KeySelector")
	proto1.RegisterType((*Item)(nil), "proto.Item")
	proto1.RegisterType((*Items)(nil), "proto.Items")
}

func init() { proto1.RegisterFile("types.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xec, 0x5c, 0xac, 0xae,
	0xb9, 0x05, 0x25, 0x95, 0x4a, 0xf2, 0x5c, 0x9c, 0x7e, 0xa9, 0xe5, 0x4e, 0xa5, 0xc9, 0xd9, 0xa9,
	0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x60, 0xb6, 0x92, 0x3b, 0x17, 0xbb, 0x5f, 0x6a, 0xb9, 0x67, 0x49, 0x6a, 0xae, 0x90, 0x18, 0x17,
	0x5b, 0x12, 0x58, 0x21, 0x54, 0x01, 0x94, 0x27, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x29, 0xc1,
	0x04, 0x16, 0x04, 0x31, 0x41, 0x06, 0xa5, 0x24, 0x96, 0x24, 0x4a, 0x30, 0x2b, 0x30, 0x6a, 0xf0,
	0x04, 0x81, 0xd9, 0x4a, 0x1a, 0x5c, 0x7c, 0x10, 0x6b, 0x82, 0x53, 0x73, 0x52, 0x93, 0x4b, 0xf2,
	0x8b, 0x70, 0x99, 0xa7, 0x64, 0xce, 0xc5, 0xed, 0x9d, 0x5a, 0x49, 0x48, 0x19, 0xa6, 0xb5, 0x4a,
	0x3a, 0x5c, 0x2c, 0x60, 0x87, 0x42, 0x65, 0x18, 0x31, 0x1d, 0xc4, 0x84, 0xe4, 0x20, 0x2d, 0x2e,
	0x56, 0x90, 0xea, 0x62, 0x21, 0x45, 0x2e, 0xd6, 0x4c, 0x10, 0x43, 0x82, 0x51, 0x81, 0x59, 0x83,
	0xdb, 0x88, 0x1b, 0x12, 0x54, 0x7a, 0x20, 0xc9, 0x20, 0x88, 0x4c, 0x12, 0x1b, 0x58, 0xc8, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xca, 0x4d, 0x88, 0xe2, 0x4c, 0x01, 0x00, 0x00,
}
